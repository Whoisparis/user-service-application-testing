name: Java CI with Coverage

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [ main, master ]

jobs:
  test-and-coverage:
    name: Run Tests and Generate Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests with JaCoCo
        run: |
          mvn clean test jacoco:report

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: target/site/jacoco/jacoco.csv
          badges-directory: badges

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: |
            target/site/jacoco/
            badges/

      - name: Commit coverage badges
        run: |
          if [[ -f "badges/jacoco.svg" ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "Github Action"
            git add badges/
            git commit -m "Update coverage badges" || echo "No changes to commit"
          fi

      - name: Push coverage badges
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: ad-m/github-push-action@master
        with:
          github_token: '${{ github.token }}'
          branch: ${{ github.ref }}

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit

  coverage-check:
    name: Coverage Quality Gate
    runs-on: ubuntu-latest
    needs: test-and-coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: jacoco-reporter

      - name: Display coverage summary
        run: |
          echo "=== Coverage Report ==="
          if [[ -f "target/site/jacoco/jacoco.csv" ]]; then
            echo "Coverage data available"
          else
            echo "No coverage data found"
          fi
